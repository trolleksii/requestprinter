name: CI

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  push:
    tags:
      - v*

jobs:
  build_and_publish:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: github.event_name != 'pull_request'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to Github Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/requestprinter
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        if: github.event_name == 'pull_request'
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Run Checkov action
        id: checkov
        if: github.event_name == 'pull_request'
        uses: bridgecrewio/checkov-action@master
        with:
          docker_image: ghcr.io/${{ github.repository_owner }}/requestprinter
          dockerfile_path: Dockerfile
